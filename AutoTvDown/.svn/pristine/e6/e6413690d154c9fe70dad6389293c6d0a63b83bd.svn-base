package torrent.service;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.URL;
import java.net.URLConnection;
import java.text.SimpleDateFormat;
import java.util.Collection;
import java.util.Date;
import java.util.Iterator;
import java.util.Map;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class TorrentSite
{

	private String cookieUrl;
	private String searchUrl;
	private String downUrl;
	private String downDate;
	
	private StringBuffer cookie = new StringBuffer();
	private StringBuffer searchStr = new StringBuffer();
	
	private TorrentSite(String cookieUrl, String searchUrl, String downUrl)
	{
		this.cookieUrl = cookieUrl;
		this.searchUrl = searchUrl;
		this.downUrl = downUrl;		
	}
	
	public void getSiteCookie() throws Exception
	{
		URL url = new URL(cookieUrl);
		URLConnection urlConn = url.openConnection();
		urlConn.setRequestProperty("User-Agent", "Mozilla/4.0");

		Map map = urlConn.getHeaderFields();

		if(map.containsKey("Set-Cookie"))
		{
		        Collection c =(Collection)map.get("Set-Cookie");
		
		        for(Iterator i = c.iterator(); i.hasNext(); )
		        {
		        	cookie.append(i.next());
		        }
		}
	}
	
	public void getSiteSearchRslt(String channel) throws Exception
	{
		InputStream is;
		InputStreamReader isr;
		BufferedReader br;
		String str;
		
		URL url = new URL(searchUrl+channel);
		URLConnection urlConn = url.openConnection();
		
		is = urlConn.getInputStream();
		isr = new InputStreamReader(is, "utf-8");
		br = new BufferedReader(isr);
		
		while((str = br.readLine()) != null)
		{
			searchStr.append(str + "\r\n");
		}
	}
	
	public String getChannel()
	{
		SimpleDateFormat sd = new SimpleDateFormat("yyMMdd");
		downDate = sd.format(new Date());
		
		String findStr = "";
		
		String makeRepExp = "<a href='s.php.+>\r?\n+.+\r?\n+.+"+downDate+".+720.+>";
		
		Pattern p = Pattern.compile(makeRepExp);
		Matcher m = p.matcher(searchStr);
				
		if (m.find())
		{
			findStr = m.group();				
		}
		
		String reg ="bo_table=.+&wr_id=[\\d]*";
		
		p = Pattern.compile(reg);
		m = p.matcher(findStr);
		
		if (m.find())
		{
			findStr = m.group();
		}
		
		return findStr;
	}
	
	public void getTorrentFile(String findStr) throws Exception
	{
		URL url = new URL(downUrl+findStr);
		
		URLConnection downConn = url.openConnection();
		downConn.setRequestProperty("User-Agent", "Mozilla/4.0");
		downConn.setRequestProperty("Cookie", cookie.toString());
		downConn.setRequestProperty("Referer", "http://torrentman.net/bbs/bbc.php?"+findStr);
		
		InputStream is;
		InputStreamReader isr;
		BufferedReader br;
		String str;
		
		is = downConn.getInputStream();
		
		File file = new File("D:\\Study\\2014_workspace\\AutoTvDown\\src\\abc.torrent");
		FileOutputStream out = new FileOutputStream(file);
		int ch;		
		
		while((ch = is.read()) != -1)
		{
			out.write(ch);
		}
	}
	
}
